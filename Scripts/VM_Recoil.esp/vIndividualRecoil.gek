scn vIndividualRecoil

array_var ResultXYZ

int isDebug
float DefX
float DefY
float DefZ

float vcIS
float randn
float randWY
float randWZ
float Ystack

string_var WeaponSname
string_var WeaponSnameHAS
float WeaponSnameHASX
float WSR_aggMastery

begin Function {WeaponSname, WSR_aggMastery, DefX, DefY, DefZ }
				
				set isDebug to GetINIFloat "BUGFIXING:vDebugAmmo" "VM_Recoil.ini"
	
				if isDebug
					PrintToConsole "Begin vIndividualRecoil"
				endif
				
				let DefY := GetINIFloat "PATTERN:Y" $WeaponSname
				let DefX := GetINIFloat "PATTERN:X" $WeaponSname
				let DefZ := GetINIFloat "PATTERN:Z" $WeaponSname
				
				
								
				
				if GetPCUsingIronSights
					let vcIS := GetINIFloat "PATTERN:cIS" $WeaponSname
					let DefY *= WSR_aggMastery*vcIS
					let DefX *= WSR_aggMastery*vcIS
					let DefZ *= WSR_aggMastery*vcIS
				else 
					let DefY *= WSR_aggMastery
					let DefX *= WSR_aggMastery
					let DefZ *= WSR_aggMastery
				endif
				
				if isDebug
					PrintToConsole "DefX is: %g" DefX
					PrintToConsole "DefY is: %g" DefY
					PrintToConsole "DefZ is: %g" DefZ
				endif
				
				let randn := GetINIFloat "PATTERN:dX" $WeaponSname
				if randn < 0 ; randomization left and right
					if getrandompercent > 50
						let randn *= -1
					endif
				else ; rand, but still to one side
					if getrandompercent > 50
						let randn := 1
					endif
				endif
				
				let randWY := GetINIFloat "PATTERN:dY" $WeaponSname
				if randWY < 0 ; pseudo constant recoil
					if getrandompercent/100 < -1*randWY
						let DefY := 0
					endif
				else  ; rand for one side, but a little
					if getrandompercent < 50
						let DefY := DefY + randWY
					endif
				endif
				
				let randWZ := GetINIFloat "PATTERN:dZ" $WeaponSname
				
				if randWZ < 0 ; rand
					if getrandompercent > 50
						let randWZ *= -1
						let DefZ *= randWZ
					endif
				else ; like Y
					if getrandompercent < 50
						let DefZ := DefZ + randWZ
					endif
				endif
				
				if isDebug
					;PrintToConsole "DefY +randWY is: %g" DefY
					;PrintToConsole "randWZ is: %g" randWZ
				endif
				
				let ResultXYZ := Ar_Construct "array"
				let ResultXYZ[0]  := DefX
				let ResultXYZ[1]  := DefY
				let ResultXYZ[2]  := DefZ

				
				SetFunctionValue ResultXYZ

end